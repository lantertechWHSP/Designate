before_script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Give the right permissions, otherwise ssh-add will refuse to add files
  ## Add the SSH key stored in SSH_PRIVATE_KEY file type CI/CD variable to the agent store
  ##
  - chmod 400 "$SSH_PRIVATE_KEY"
  - ssh-add "$SSH_PRIVATE_KEY"

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  ##
  ## Add Known Hosts
  ##
  - ssh-keyscan 20.157.214.14 >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  ##
  ## Add Rsync
  ##
  - apt-get update -y apt-get -y install rsync

image: node:18.12.1

cache:
  paths:
    - node_modules/

build:
  script:
    - echo "$ENVIRONMENT_VARIABLES" >> ".env"
    - npm ci
    - npm run build

tunnel:
  script:
    - ls
    - rsync -avz next.config.js gitlab@20.157.214.14:/opt/whsp/guff 
    # - ssh -tt gitlab@20.157.214.14 "scp next.config.js /opt/whsp/guff/"
# build:
#   ##
#   ## Build the code
#   ## “cd /opt/whsp”: go to directory
#   ## “git pull”: pull the latest code
#   ## “rm -f package-lock.json”: Remove package lock
#   ## “npm install”: Install package
#   ## “rm -rf .next”: Remove .next file
#   ## “npm run build”: Build the .next file
#   ## “sudo systemctl restart nextjs”: Restart the server
#   script:
#     - ssh -tt gitlab@20.157.214.14 "cd /opt/whsp && git pull && rm -f package-lock.json && npm install && rm -rf .next && npm run build && sudo systemctl restart nextjs"
