image: docker:19.03.0

variables:
  DOCKER_DRIVER: overlay2
  # Create the certificates inside this directory for both the server
  # and client. The certificates used by the client will be created in
  # /certs/client so we only need to share this directory with the
  # volume mount in `config.toml`.
  DOCKER_TLS_CERTDIR: "/certs"

services:
  - docker:19.03.0-dind

before_script:
  - docker info
  - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
  - docker run registry.gitlab.com/designate/client-work/whsp

## Cache node modules
# cache:
#   paths:
#     - node_modules/

## Artifact the .next directory
# default:
#   artifacts:
#     paths:
#       - .next/

## Define the stages
stages:
  - build
  # - deploy

build:
  stage: build
  script:
    ## Add the environment variables and echo it to a .env file for building
    - echo "$ENVIRONMENT_VARIABLES" >> ".env"
    ## Install
    - npm ci
    ## Build
    - npm run build
  only:
    - master

# deploy:
#   stage: deploy
#   script:
#     ## Transfer relevant NextJS files to the server
#     - rsync -az next.config.js gitlab@20.157.214.14:/opt/whsp/ 
#     - rsync -az package.json gitlab@20.157.214.14:/opt/whsp/
#     - rsync -az node_modules gitlab@20.157.214.14:/opt/whsp/
#     - rsync -az .next gitlab@20.157.214.14:/opt/whsp/
#     ## Restart the server
#     - ssh -tt gitlab@20.157.214.14 "sudo systemctl restart nextjs"
#   only:
#     - master
